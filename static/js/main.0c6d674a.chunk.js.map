{"version":3,"sources":["context.jsx","components/TodoItem/TodoItem.jsx","components/ToDoList/ToDoList.jsx","components/Accept/Accept.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","changeTodoStatus","useContext","removeTodo","changeTodoTitle","filters","useState","isBeingEdited","setIsBeingEdited","title","newTitleToSet","setNewTitleToSet","key","id","className","completed","Completed","type","checked","onChange","onDoubleClick","onClick","name","value","autoFocus","event","target","focus","onKeyDown","preventDefault","trim","length","endEditing","onBlur","endEditingByBlur","ToDoList","toDosToShow","map","Accept","setIsAcceptVisible","changeAllTodosStatus","Footer","todos","setTodos","active","statusToShow","setStatusToShow","href","All","Active","App","newTitle","setNewToDoTitle","isAcceptVisible","filter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","todoId","statusToSet","placeholder","Date","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c6d674a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","import React, { useState, useContext } from 'react';\nimport { Context } from '../../context';\n\nexport const TodoItem = ({ todo }) => {\n  const { changeTodoStatus } = useContext(Context);\n  const { removeTodo } = useContext(Context);\n  const { changeTodoTitle } = useContext(Context);\n  const { filters } = useContext(Context);\n\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\n  const [newTitleToSet, setNewTitleToSet] = useState(todo.title);\n\n  function endEditing(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (newTitleToSet.trim().length > 0) {\n        changeTodoTitle(todo.id, newTitleToSet);\n      } else {\n        setNewTitleToSet(todo.title);\n      }\n      setIsBeingEdited(false);\n    }\n\n    if (event.key === 'Escape') {\n      setIsBeingEdited(false);\n    }\n  }\n\n  function endEditingByBlur(event) {\n    if (newTitleToSet.trim().length > 0) {\n      changeTodoTitle(todo.id, newTitleToSet);\n    } else {\n      setNewTitleToSet(todo.title);\n    }\n    setIsBeingEdited(false);\n\n    if (event.key === 'Escape') {\n      setIsBeingEdited(false);\n    }\n  }\n\n  return (\n    <>\n      <li\n        key={todo.id}\n        className={(\n          todo.completed ? filters.Completed : ''\n          ) + (\n            isBeingEdited ? ' editing ' : ''\n        )}\n      >\n\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => changeTodoStatus(todo.id)}\n          />\n          <label\n            onDoubleClick={() => setIsBeingEdited(true)}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(todo.id)}\n          />\n        </div>\n\n        {isBeingEdited && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            id=\"editingInput\"\n            name=\"editInput\"\n            value={newTitleToSet}\n            autoFocus\n            onChange={(event) => setNewTitleToSet(event.target.value)}\n            focus={true}\n            onKeyDown={(event) => endEditing(event)}\n            onBlur={(event) => endEditingByBlur(event)}\n          />\n        )}\n\n      </li>\n    </>\n  );\n}\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\n\nexport const ToDoList = ({ toDosToShow }) => {\n\n  return (\n    <ul className=\"todo-list\">\n      {toDosToShow.map(todo => (\n       <TodoItem todo={todo}/>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport const Accept = ({\n  setIsAcceptVisible,\n  changeAllTodosStatus\n}) => {\n\n  return (\n    <div\n     className=\"accept-container\"\n    >\n\n      <div\n        className=\"accept\"\n      >\n\n        <p\n          className=\"accept__text\"\n        >\n          Mark all as:\n        </p>\n\n        <div\n          className=\"accept__buttons\"\n        >\n          <button\n            className=\"accept__button\"\n            onClick={() => {\n              changeAllTodosStatus(true);\n              setIsAcceptVisible(false);\n            }}\n          >\n            completed\n          </button>\n\n          <button\n            className=\"accept__button\"\n            onClick={() => {\n              changeAllTodosStatus(false);\n              setIsAcceptVisible(false);\n            }}\n          >\n            active\n          </button>\n\n          <button\n            className=\"accept__button accept__button-canсel\"\n            onClick={() => setIsAcceptVisible(false)}\n          >\n            canсel\n          </button>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const Footer = ({\n  todos,\n  filters,\n  setTodos,\n  active,\n  statusToShow,\n  setStatusToShow,\n}) => {\n\n  return (\n    <footer className=\"footer\">\n\n      <span className=\"todo-count\">\n        {active.length}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={statusToShow === filters.All ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.All)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.All);\n            }}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={statusToShow === filters.Active ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.Active)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.Active);\n            }}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={statusToShow === filters.Completed ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.Completed)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.Completed);\n            }}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {(active.length !== todos.length) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => setTodos(active)}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { ToDoList } from './components/ToDoList';\nimport { Accept } from './components/Accept';\nimport { Footer } from './components/Footer';\nimport { Context } from './context';\n\nexport function App() {\n  const [todos, setTodos] = useState([]);\n\n  const filters = {\n    All: 'all',\n    Active: 'active',\n    Completed: 'completed',\n  };\n\n  const [statusToShow, setStatusToShow] = useState(filters.All);\n  const [newTitle, setNewToDoTitle] = useState('');\n  const [isAcceptVisible, setIsAcceptVisible] = useState(false);\n\n  const active = todos.filter(todo => todo.completed === false);\n  const completed = todos.filter(todo => todo.completed === true);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('todos'))) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  function toDosToShow() {\n    switch (statusToShow) {\n      case filters.Completed:\n        return completed;\n\n      case filters.Active:\n        return active;\n\n      default:\n        return todos;\n    }\n  }\n\n  function addTodo(event) {\n    if (newTitle.trim().length > 0) {\n      setTodos([\n        ...todos,\n        { title: newTitle, id: +new Date(), completed: false },\n      ]);\n      setNewToDoTitle('');\n    }\n  }\n\n  const changeTodoStatus = (todoId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeTodoTitle = (todoId, newTitleToSet) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, title: newTitleToSet };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeAllTodosStatus = (statusToSet) => {\n    setTodos(todos.map(\n      todo => ({ ...todo, completed: statusToSet }),\n    ));\n\n    if (statusToShow !== filters.All) {\n      if (statusToSet) {\n        setStatusToShow(filters.Completed);\n      } else {\n        setStatusToShow(filters.Active);\n      }\n    }\n  };\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        filters,\n        changeTodoStatus,\n        removeTodo,\n        changeTodoTitle,\n      }}\n    >\n\n      <section className=\"todoapp\">\n\n        {isAcceptVisible && (\n          <Accept\n            setIsAcceptVisible={setIsAcceptVisible}\n            changeAllTodosStatus={changeAllTodosStatus}\n          />\n        )}\n\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form>\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newTitle}\n              onChange={event => setNewToDoTitle(event.target.value)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  addTodo(event);\n                }\n              }}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n\n          {todos.length > 0 && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                checked={active.length === 0}\n                onClick={() => setIsAcceptVisible(true)}\n              />\n              <label htmlFor=\"toggle-all\">\n                Mark all as complete\n              </label>\n            </>\n          )}\n\n          <ToDoList\n            toDosToShow={toDosToShow()}\n          />\n\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            filters={filters}\n            todos={todos}\n            setTodos={setTodos}\n            active={active}\n            statusToShow={statusToShow}\n            setStatusToShow={setStatusToShow}\n          />\n        )}\n      </section>\n\n    </Context.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}