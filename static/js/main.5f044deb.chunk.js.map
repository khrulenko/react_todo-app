{"version":3,"sources":["context.jsx","components/TodoItem/TodoItem.jsx","components/ToDoList/ToDoList.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","changeTodoStatus","useContext","removeTodo","changeTodoTitle","filters","useState","isBeingEdited","setIsBeingEdited","title","newTitleToSet","setNewTitleToSet","key","id","className","completed","Completed","type","checked","onChange","onDoubleClick","onClick","name","value","autoFocus","event","target","focus","onKeyDown","preventDefault","trim","length","endEditing","onBlur","endEditingByBlur","ToDoList","toDosToShow","map","Footer","todos","setTodos","active","statusToShow","setStatusToShow","href","All","Active","App","newToDoTitle","setNewToDoTitle","filter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","changeAllTodosStatus","statusToSet","Provider","todoId","placeholder","Date","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f044deb.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","import React, { useState, useContext } from 'react';\nimport { Context } from '../../context';\n\nexport const TodoItem = ({ todo }) => {\n  const { changeTodoStatus } = useContext(Context);\n  const { removeTodo } = useContext(Context);\n  const { changeTodoTitle } = useContext(Context);\n  const { filters } = useContext(Context);\n\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\n  const [newTitleToSet, setNewTitleToSet] = useState(todo.title);\n\n  function endEditing(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (newTitleToSet.trim().length > 0) {\n        changeTodoTitle(todo.id, newTitleToSet);\n      } else {\n        setNewTitleToSet(todo.title);\n      }\n      setIsBeingEdited(false);\n    }\n\n    if (event.key === 'Escape') {\n      setIsBeingEdited(false);\n    }\n  }\n\n  function endEditingByBlur(event) {\n    if (newTitleToSet.trim().length > 0) {\n      changeTodoTitle(todo.id, newTitleToSet);\n    } else {\n      setNewTitleToSet(todo.title);\n    }\n    setIsBeingEdited(false);\n\n    if (event.key === 'Escape') {\n      setIsBeingEdited(false);\n    }\n  }\n\n  return (\n    <>\n      <li\n        key={todo.id}\n        className={(\n          todo.completed ? filters.Completed : ''\n          ) + (\n            isBeingEdited ? ' editing ' : ''\n        )}\n      >\n\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => changeTodoStatus(todo.id)}\n          />\n          <label\n            onDoubleClick={() => setIsBeingEdited(true)}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(todo.id)}\n          />\n        </div>\n\n        {isBeingEdited && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            id=\"editingInput\"\n            name=\"editInput\"\n            value={newTitleToSet}\n            autoFocus\n            onChange={(event) => setNewTitleToSet(event.target.value)}\n            focus={true}\n            onKeyDown={(event) => endEditing(event)}\n            onBlur={(event) => endEditingByBlur(event)}\n          />\n        )}\n\n      </li>\n    </>\n  );\n}\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\n\nexport const ToDoList = ({\n  toDosToShow\n}) => {\n\n\n  return (\n    <ul className=\"todo-list\">\n      {toDosToShow.map(todo => (\n       <TodoItem todo={todo}/>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport const Footer = ({\n  todos,\n  filters,\n  setTodos,\n  active,\n  statusToShow,\n  setStatusToShow,\n}) => {\n\n  return (\n    <footer className=\"footer\">\n\n      <span className=\"todo-count\">\n        {active.length}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={statusToShow === filters.All ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.All)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.All);\n            }}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={statusToShow === filters.Active ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.Active)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.Active);\n            }}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={statusToShow === filters.Completed ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.Completed)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.Completed);\n            }}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {(active.length !== todos.length) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => setTodos(active)}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { ToDoList } from './components/ToDoList';\nimport { Footer } from './components/Footer';\nimport { Context } from './context';\n\nexport function App() {\n  const [todos, setTodos] = useState([]);\n\n  const filters = {\n    All: 'all',\n    Active: 'active',\n    Completed: 'completed',\n  };\n\n  const [statusToShow, setStatusToShow] = useState(filters.All);\n  const [newToDoTitle, setNewToDoTitle] = useState('');\n\n  const active = todos.filter(todo => todo.completed === false);\n  const completed = todos.filter(todo => todo.completed === true);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('todos'))) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  function toDosToShow() {\n    if (statusToShow === filters.Completed) {\n      return completed;\n    }\n\n    if (statusToShow === filters.Active) {\n      return active;\n    }\n\n    return todos;\n  }\n\n  function addTodo(event) {\n    if (newToDoTitle.trim().length > 0) {\n      setTodos([\n        ...todos,\n        { title: newToDoTitle, id: +new Date(), completed: false },\n      ]);\n      setNewToDoTitle('');\n    }\n  }\n\n  const changeTodoStatus = (todoId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeTodoTitle = (todoId, newTitleToSet) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, title: newTitleToSet };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeAllTodosStatus = (statusToSet) => {\n    setTodos(todos.map(\n      todo => ({ ...todo, completed: statusToSet }),\n    ));\n\n    if (statusToShow !== filters.All) {\n      if (statusToSet) {\n        setStatusToShow(filters.Completed);\n      } else {\n        setStatusToShow(filters.Active);\n      }\n    }\n  };\n\n  function shouldToddleAllBeVisible() {\n    return (\n      active.length === todos.length\n        || completed.length === todos.length\n    ) && todos.length > 0;\n  }\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        filters,\n        changeTodoStatus,\n        removeTodo,\n        changeTodoTitle,\n      }}\n    >\n\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form>\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newToDoTitle}\n              onChange={event => setNewToDoTitle(event.target.value)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  addTodo(event);\n                }\n              }}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n\n          {shouldToddleAllBeVisible() && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                checked={active.length === 0}\n                onChange={() => {\n                  if (active.length === 0) {\n                    changeAllTodosStatus(false);\n                  } else {\n                    changeAllTodosStatus(true);\n                  }\n                }}\n              />\n              <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            </>\n          )}\n\n          <ToDoList\n            toDosToShow={toDosToShow()}\n          />\n\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            filters={filters}\n            todos={todos}\n            setTodos={setTodos}\n            active={active}\n            statusToShow={statusToShow}\n            setStatusToShow={setStatusToShow}\n          />\n        )}\n      </section>\n\n    </Context.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}